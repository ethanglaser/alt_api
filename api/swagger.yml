components:
  responses:
    DEFAULT_ERROR:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Default error response
    UNPROCESSABLE_ENTITY:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unprocessable Entity
  schemas:
    Error:
      properties:
        code:
          description: Error code
          type: integer
        errors:
          description: Errors
          type: object
        message:
          description: Error message
          type: string
        status:
          description: Error name
          type: string
      type: object
    LoginArgs:
      properties:
        password:
          description: password
          minLength: 1
          type: string
        recaptchaToken:
          description: login recaptcha token
          type: string
        usernameEmail:
          description: usernameEmail
          minLength: 1
          type: string
      required:
      - password
      - recaptchaToken
      - usernameEmail
      type: object
    LoginRes:
      properties:
        id:
          description: user id
          format: uuid
          type: string
        token:
          description: result token
          type: string
        user_type:
          description: user type
          enum:
          - admin
          - user
          type: string
      required:
      - id
      - token
      - user_type
      type: object
    Message:
      properties:
        message:
          description: Output message / data
          type: string
      required:
      - message
      type: object
    PaginationMetadata:
      properties:
        total:
          type: integer
        total_pages:
          type: integer
        first_page:
          type: integer
        last_page:
          type: integer
        page:
          type: integer
        previous_page:
          type: integer
        next_page:
          type: integer
      type: object
    PublicUserRes:
      properties:
        email:
          description: user email
          type: string
        id:
          description: user id
          format: uuid
          type: string
        name:
          description: user name
          type: string
        user_type:
          description: user type
          enum:
          - admin
          - user
          type: string
        username:
          description: username
          type: string
      required:
      - email
      - id
      - name
      - user_type
      - username
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  title: api
  version: 3.0.1
openapi: 3.0.3
paths:
  /:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: OK
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      summary: get request
      tags:
      - misc
  /hello:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: OK
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      summary: get request
      tags:
      - misc
  /auth/login:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginArgs'
        required: true
      responses:
        '422':
          $ref: '#/components/responses/UNPROCESSABLE_ENTITY'
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginRes'
          description: OK
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      summary: post request
      tags:
      - authentication
  /users/{user_id}:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicUserRes'
          description: OK
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      summary: get request
      tags:
      - users
    parameters:
    - in: path
      name: user_id
      required: true
      schema:
        minLength: 1
        type: string
  /users/:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PublicUserRes'
                type: array
          description: OK
        default:
          $ref: '#/components/responses/DEFAULT_ERROR'
      summary: get request
      tags:
      - users
security:
- bearerAuth: []
tags:
- description: Index route
  name: misc
- description: Operations on users
  name: authentication
- description: Operations on users
  name: users
